"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/chat/route";
exports.ids = ["app/api/chat/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/next@14.1.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fsaadbadr%2FDocuments%2FWeb%2Fbrandenburg-dialog-web%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsaadbadr%2FDocuments%2FWeb%2Fbrandenburg-dialog-web&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/.pnpm/next@14.1.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fsaadbadr%2FDocuments%2FWeb%2Fbrandenburg-dialog-web%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsaadbadr%2FDocuments%2FWeb%2Fbrandenburg-dialog-web&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/.pnpm/next@14.1.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/.pnpm/next@14.1.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/.pnpm/next@14.1.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_saadbadr_Documents_Web_brandenburg_dialog_web_src_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/chat/route.ts */ \"(rsc)/./src/app/api/chat/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/chat/route\",\n        pathname: \"/api/chat\",\n        filename: \"route\",\n        bundlePath: \"app/api/chat/route\"\n    },\n    resolvedPagePath: \"/Users/saadbadr/Documents/Web/brandenburg-dialog-web/src/app/api/chat/route.ts\",\n    nextConfigOutput,\n    userland: _Users_saadbadr_Documents_Web_brandenburg_dialog_web_src_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/chat/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxNC4xLjBfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjaGF0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZjaGF0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2hhdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNhYWRiYWRyJTJGRG9jdW1lbnRzJTJGV2ViJTJGYnJhbmRlbmJ1cmctZGlhbG9nLXdlYiUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZzYWFkYmFkciUyRkRvY3VtZW50cyUyRldlYiUyRmJyYW5kZW5idXJnLWRpYWxvZy13ZWImaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDOEI7QUFDM0c7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW1wLW5leHQvP2YyYjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3NhYWRiYWRyL0RvY3VtZW50cy9XZWIvYnJhbmRlbmJ1cmctZGlhbG9nLXdlYi9zcmMvYXBwL2FwaS9jaGF0L3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jaGF0L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY2hhdFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvY2hhdC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9zYWFkYmFkci9Eb2N1bWVudHMvV2ViL2JyYW5kZW5idXJnLWRpYWxvZy13ZWIvc3JjL2FwcC9hcGkvY2hhdC9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9jaGF0L3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/next@14.1.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fsaadbadr%2FDocuments%2FWeb%2Fbrandenburg-dialog-web%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsaadbadr%2FDocuments%2FWeb%2Fbrandenburg-dialog-web&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/chat/route.ts":
/*!***********************************!*\
  !*** ./src/app/api/chat/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/.pnpm/next@14.1.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./src/lib/db.ts\");\n\n\nconst FLOWISE_URL = \"https://flowise-smg.onrender.com\" || 0;\nconst DEFAULT_FLOWISE_CHATFLOW_ID = process.env.FLOWISE_CHATFLOW_ID;\nconst FLOWISE_API_KEY = process.env.FLOWISE_API_KEY;\n// API DEBUG VERSION 004\nconsole.log(\"CHAT-API-DEBUG-004: API Route geladen\");\nconsole.log(\"CHAT-API-DEBUG-004: FLOWISE_URL:\", FLOWISE_URL);\nconsole.log(\"CHAT-API-DEBUG-004: DEFAULT_FLOWISE_CHATFLOW_ID:\", DEFAULT_FLOWISE_CHATFLOW_ID ? \"vorhanden\" : \"FEHLT\");\n// FALLBACK-ANTWORTEN für den Fall, dass die API nicht erreichbar ist\nconst FALLBACK_RESPONSES = [\n    \"Entschuldigung, ich kann im Moment leider nicht auf Ihre Anfrage antworten. Bitte versuchen Sie es sp\\xe4ter noch einmal.\",\n    \"Es tut mir leid, aber ich habe momentan Probleme, eine Antwort zu generieren. Bitte versuchen Sie es sp\\xe4ter erneut.\",\n    \"Leider kann ich Ihre Anfrage derzeit nicht bearbeiten. Bitte versuchen Sie es sp\\xe4ter noch einmal oder wenden Sie sich direkt an die Stadtverwaltung.\"\n];\nasync function POST(request) {\n    console.log(\"CHAT-API-DEBUG-004: POST-Anfrage erhalten\");\n    try {\n        const body = await request.json();\n        console.log(\"CHAT-API-DEBUG-004: Request-Body:\", JSON.stringify(body));\n        // Extrahiere die letzte Benutzernachricht für die Weiterverarbeitung\n        let userQuestion = \"\";\n        if (body.messages && body.messages.length > 0) {\n            const lastUserMessage = [\n                ...body.messages\n            ].reverse().find((m)=>m.role === \"user\");\n            if (lastUserMessage) {\n                userQuestion = lastUserMessage.content;\n            }\n        } else if (body.message) {\n            userQuestion = body.message;\n        }\n        // SPEZIALFALL: \"Wer bist du?\" und ähnliche Identitätsfragen\n        const identityQuestions = [\n            \"wer bist du\",\n            \"was bist du\",\n            \"stell dich vor\",\n            \"wie hei\\xdft du\",\n            \"was kannst du\"\n        ];\n        // Überprüfe, ob die Frage eine Identitätsfrage ist (case insensitive)\n        const normalizedQuestion = userQuestion.toLowerCase().trim();\n        const isIdentityQuestion = identityQuestions.some((q)=>normalizedQuestion.includes(q));\n        // Behandle sowohl einzelne Nachrichten als auch Nachrichtenverläufe\n        const message = body.message;\n        const messages = body.messages;\n        // Wir ignorieren den streaming-Parameter und setzen immer streaming=false\n        const streaming = false;\n        if (!message && (!messages || messages.length === 0)) {\n            console.error(\"CHAT-API-DEBUG-004: Keine Nachricht gefunden\");\n            // FALLBACK: Sende eine freundliche Fehlermeldung zurück\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                text: \"Entschuldigung, ich habe keine Frage erhalten. Wie kann ich Ihnen helfen?\",\n                error: \"Keine Nachricht gefunden\"\n            });\n        }\n        // Ermittle die zu verwendende Flowise-Chatflow-ID\n        // Wenn eine botId angegeben ist, verwende die Chatflow-ID dieses Bots\n        let flowiseId = DEFAULT_FLOWISE_CHATFLOW_ID;\n        let bot = null;\n        let botSettings = null;\n        if (body.botId) {\n            try {\n                bot = await _lib_db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].bot.findUnique({\n                    where: {\n                        id: body.botId\n                    },\n                    include: {\n                        settings: true\n                    }\n                });\n                if (bot) {\n                    flowiseId = bot.flowiseId;\n                    botSettings = bot.settings;\n                    console.log(`CHAT-API-DEBUG-004: Verwende Chatflow-ID von Bot \"${bot.name}\": ${flowiseId}`);\n                } else {\n                    console.warn(`CHAT-API-DEBUG-004: Bot mit ID ${body.botId} nicht gefunden, verwende Standard-Chatflow`);\n                }\n            } catch (dbError) {\n                console.error(\"CHAT-API-DEBUG-004: Datenbankfehler bei Bot-Abfrage:\", dbError);\n            }\n        } else {\n            // Wenn keine botId angegeben ist, aber ein aktiver Standard-Bot existiert\n            try {\n                bot = await _lib_db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].bot.findFirst({\n                    where: {\n                        active: true\n                    },\n                    include: {\n                        settings: true\n                    },\n                    orderBy: {\n                        createdAt: \"asc\"\n                    }\n                });\n                if (bot) {\n                    flowiseId = bot.flowiseId;\n                    botSettings = bot.settings;\n                    console.log(`CHAT-API-DEBUG-004: Verwende Chatflow-ID vom Standard-Bot \"${bot.name}\": ${flowiseId}`);\n                }\n            } catch (dbError) {\n                console.error(\"CHAT-API-DEBUG-004: Datenbankfehler bei Standard-Bot-Abfrage:\", dbError);\n            }\n        }\n        // Für Identitätsfragen generiere eine direkte Antwort basierend auf den Bot-Einstellungen\n        if (isIdentityQuestion && botSettings) {\n            console.log(\"CHAT-API-DEBUG-004: Identit\\xe4tsfrage erkannt, generiere direkte Antwort\");\n            const botPersonality = botSettings.botPersonality || \"Du bist der Assistent des Einkaufscenters ORO Schwabach\";\n            const botContext = botSettings.botContext || \"Center\";\n            const botScope = botSettings.botScope || \"das Center, die Shops und die Produkte\";\n            // Generiere eine personalisierte Antwort basierend auf den Bot-Einstellungen\n            let botAnswer = `Ich bin ein digitaler Assistent für das ${botContext} 🤖. Ich helfe dir gerne bei Fragen rund um ${botScope}! 😊`;\n            // Zusätzliche Informationen basierend auf der spezifischen Frage\n            if (normalizedQuestion.includes(\"was kannst du\")) {\n                botAnswer += ` Ich kann dir Informationen zu Öffnungszeiten, Shops, Angeboten und vielem mehr geben. Frag mich einfach! 📝`;\n            }\n            console.log(\"CHAT-API-DEBUG-004: Benutzerdefinierte Antwort:\", botAnswer);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                text: botAnswer,\n                question: userQuestion\n            });\n        }\n        // Prüfe ob eine Chatflow-ID verfügbar ist\n        if (!flowiseId) {\n            console.error(\"CHAT-API-DEBUG-004: Keine Flowise-Chatflow-ID verf\\xfcgbar\");\n            // FALLBACK: Sende eine Standardantwort zurück\n            const randomIndex = Math.floor(Math.random() * FALLBACK_RESPONSES.length);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                text: FALLBACK_RESPONSES[randomIndex],\n                error: \"Keine Flowise-Chatflow-ID verf\\xfcgbar\"\n            });\n        }\n        const apiUrl = `${FLOWISE_URL}/api/v1/prediction/${flowiseId}`;\n        console.log(\"CHAT-API-DEBUG-004: Flowise API URL:\", apiUrl);\n        // Verbesserte Anfrage-Struktur basierend auf der Flowise API-Dokumentation\n        let requestBody;\n        if (messages && messages.length > 0) {\n            // Extrahiere die letzte Benutzernachricht aus dem messages-Array\n            const lastUserMessage = [\n                ...messages\n            ].reverse().find((m)=>m.role === \"user\");\n            if (lastUserMessage) {\n                console.log(\"CHAT-API-DEBUG-004: Letzte Benutzernachricht gefunden:\", lastUserMessage.content);\n                // Formatiere messages für Flowise API\n                const history = messages.filter((m)=>m !== lastUserMessage) // Alle Nachrichten außer der letzten Benutzernachricht\n                .map((m)=>({\n                        role: m.role === \"assistant\" ? \"apiMessage\" : \"userMessage\",\n                        content: m.content\n                    }));\n                requestBody = {\n                    question: lastUserMessage.content,\n                    history: history.length > 0 ? history : undefined,\n                    streaming: false\n                };\n                // Wenn Bot-Einstellungen verfügbar sind, füge overrideConfig hinzu\n                if (botSettings) {\n                    requestBody.overrideConfig = {\n                        botPersonality: botSettings.botPersonality || \"Du bist der Assistent des Einkaufscenters ORO Schwabach\",\n                        botContext: botSettings.botContext || \"Center\",\n                        botScope: botSettings.botScope || \"das Center, die Shops und die Produkte\",\n                        offerTip: botSettings.offerTip || \"Wenn du einen Shop findest in dem es ein Aktuelles Angebot bist, bietest du das Angebot als Tipp an.\",\n                        closedDays: botSettings.closedDays || \"\"\n                    };\n                    console.log(\"CHAT-API-DEBUG-004: overrideConfig hinzugef\\xfcgt:\", JSON.stringify(requestBody.overrideConfig));\n                }\n                console.log(\"CHAT-API-DEBUG-004: Nachrichtenverlauf mit\", history.length, \"Eintr\\xe4gen\");\n            } else {\n                console.error(\"CHAT-API-DEBUG-004: Keine Benutzernachricht im Verlauf gefunden\");\n                // FALLBACK: Sende eine Standardantwort zurück\n                const randomIndex = Math.floor(Math.random() * FALLBACK_RESPONSES.length);\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    text: FALLBACK_RESPONSES[randomIndex],\n                    error: \"Keine Benutzernachricht im Verlauf gefunden\"\n                });\n            }\n        } else {\n            // Einzelne Nachricht verwenden\n            requestBody = {\n                question: message,\n                streaming: false\n            };\n            // Wenn Bot-Einstellungen verfügbar sind, füge overrideConfig hinzu\n            if (botSettings) {\n                requestBody.overrideConfig = {\n                    botPersonality: botSettings.botPersonality || \"Du bist der Assistent des Einkaufscenters ORO Schwabach\",\n                    botContext: botSettings.botContext || \"Center\",\n                    botScope: botSettings.botScope || \"das Center, die Shops und die Produkte\",\n                    offerTip: botSettings.offerTip || \"Wenn du einen Shop findest in dem es ein Aktuelles Angebot bist, bietest du das Angebot als Tipp an.\",\n                    closedDays: botSettings.closedDays || \"\"\n                };\n                console.log(\"CHAT-API-DEBUG-004: overrideConfig hinzugef\\xfcgt:\", JSON.stringify(requestBody.overrideConfig));\n            }\n            console.log(\"CHAT-API-DEBUG-004: Einzelnachricht wird verwendet:\", message);\n        }\n        console.log(\"CHAT-API-DEBUG-004: Flowise API Anfrage:\", apiUrl);\n        console.log(\"CHAT-API-DEBUG-004: Request Body:\", JSON.stringify(requestBody));\n        try {\n            console.log(\"CHAT-API-DEBUG-004: Starte Fetch zu Flowise...\");\n            // Setze ein Timeout für die Anfrage\n            const controller = new AbortController();\n            const timeoutId = setTimeout(()=>controller.abort(), 15000); // Auf 15 Sekunden erhöht, da Flowise manchmal länger braucht\n            const headers = {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": FLOWISE_API_KEY ? `Bearer ${FLOWISE_API_KEY}` : \"\"\n            };\n            // Füge einen speziellen Header hinzu, um die Rohformatierung in Flowise zu erhalten\n            // Dies hilft, die identische Formatierung wie in der Flowise-Oberfläche zu erhalten\n            const response = await fetch(apiUrl, {\n                method: \"POST\",\n                headers,\n                body: JSON.stringify(requestBody),\n                signal: controller.signal\n            });\n            // Timeout entfernen, da die Anfrage abgeschlossen ist\n            clearTimeout(timeoutId);\n            console.log(\"CHAT-API-DEBUG-004: Flowise API Antwort Status:\", response.status);\n            if (!response.ok) {\n                const errorData = await response.text();\n                console.error(\"CHAT-API-DEBUG-004: Flowise API Fehler:\", response.status, errorData);\n                // FALLBACK: Sende eine Standardantwort zurück\n                const randomIndex = Math.floor(Math.random() * FALLBACK_RESPONSES.length);\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    text: FALLBACK_RESPONSES[randomIndex],\n                    error: `API-Fehler: ${response.status}`\n                });\n            }\n            // Bei normaler Antwort das JSON zurückgeben\n            const data = await response.json();\n            console.log(\"CHAT-API-DEBUG-004: Flowise API Antwort erhalten:\", typeof data, data ? Object.keys(data) : \"Keine Daten\");\n            // Direkt die Antwort von Flowise zurückgeben ohne Modifikationen\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(data);\n        } catch (fetchError) {\n            console.error(\"CHAT-API-DEBUG-004: Fetch-Fehler bei Flowise-Anfrage:\", fetchError);\n            // FALLBACK: Wenn der Fetch fehlgeschlagen ist, sende eine Standardantwort zurück\n            const randomIndex = Math.floor(Math.random() * FALLBACK_RESPONSES.length);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                text: FALLBACK_RESPONSES[randomIndex],\n                question: userQuestion,\n                error: fetchError instanceof Error ? fetchError.message : \"Unbekannter Fetch-Fehler\"\n            });\n        }\n    } catch (error) {\n        console.error(\"CHAT-API-DEBUG-004: Chat API Fehler:\", error);\n        // FALLBACK: Sende eine Standardantwort zurück\n        const randomIndex = Math.floor(Math.random() * FALLBACK_RESPONSES.length);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            text: FALLBACK_RESPONSES[randomIndex],\n            error: error instanceof Error ? error.message : \"Ein unbekannter Fehler ist aufgetreten\"\n        }, {\n            status: 200\n        }) // Wichtig: Status 200 zurückgeben, um Frontend-Fehler zu vermeiden\n        ;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/chat/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/db.ts":
/*!***********************!*\
  !*** ./src/lib/db.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\n// Globaler Prisma-Client\nconst globalForPrisma = global;\n// Erstelle eine Singleton-Instanz des Prisma-Clients\nconst prisma = globalForPrisma.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log:  true ? [\n        \"query\",\n        \"error\",\n        \"warn\"\n    ] : 0\n});\n// Stellt sicher, dass wir im Entwicklungsmodus nur eine Prisma-Instanz haben\nif (true) globalForPrisma.prisma = prisma;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prisma);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2RiLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkM7QUFFN0MseUJBQXlCO0FBQ3pCLE1BQU1DLGtCQUFrQkM7QUFFeEIscURBQXFEO0FBQzlDLE1BQU1DLFNBQ1hGLGdCQUFnQkUsTUFBTSxJQUN0QixJQUFJSCx3REFBWUEsQ0FBQztJQUNmSSxLQUFLQyxLQUF5QixHQUFnQjtRQUFDO1FBQVM7UUFBUztLQUFPLEdBQUcsQ0FBUztBQUN0RixHQUFFO0FBRUosNkVBQTZFO0FBQzdFLElBQUlBLElBQXlCLEVBQWNKLGdCQUFnQkUsTUFBTSxHQUFHQTtBQUVwRSxpRUFBZUEsTUFBTUEsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbXAtbmV4dC8uL3NyYy9saWIvZGIudHM/OWU0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCdcblxuLy8gR2xvYmFsZXIgUHJpc21hLUNsaWVudFxuY29uc3QgZ2xvYmFsRm9yUHJpc21hID0gZ2xvYmFsIGFzIHVua25vd24gYXMgeyBwcmlzbWE6IFByaXNtYUNsaWVudCB9XG5cbi8vIEVyc3RlbGxlIGVpbmUgU2luZ2xldG9uLUluc3RhbnogZGVzIFByaXNtYS1DbGllbnRzXG5leHBvcnQgY29uc3QgcHJpc21hID1cbiAgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSB8fFxuICBuZXcgUHJpc21hQ2xpZW50KHtcbiAgICBsb2c6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnID8gWydxdWVyeScsICdlcnJvcicsICd3YXJuJ10gOiBbJ2Vycm9yJ10sXG4gIH0pXG5cbi8vIFN0ZWxsdCBzaWNoZXIsIGRhc3Mgd2lyIGltIEVudHdpY2tsdW5nc21vZHVzIG51ciBlaW5lIFByaXNtYS1JbnN0YW56IGhhYmVuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA9IHByaXNtYVxuXG5leHBvcnQgZGVmYXVsdCBwcmlzbWEgIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsImdsb2JhbEZvclByaXNtYSIsImdsb2JhbCIsInByaXNtYSIsImxvZyIsInByb2Nlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/db.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@14.1.0_react-dom@18.3.1_react@18.3.1__react@18.3.1"], () => (__webpack_exec__("(rsc)/./node_modules/.pnpm/next@14.1.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fsaadbadr%2FDocuments%2FWeb%2Fbrandenburg-dialog-web%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsaadbadr%2FDocuments%2FWeb%2Fbrandenburg-dialog-web&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();